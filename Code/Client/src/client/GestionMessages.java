/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import client.client.ServeurMessage;
import client.corp.Utilisateur;
import client.corp.Discussion;
import client.corp.Message;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author user
 */
public class GestionMessages extends javax.swing.JFrame {

    private static String login;
    private static PrintWriter out;
    private static BufferedReader in;
    private static Utilisateur user;
    private static List<Discussion> list;
    private static Socket socket;
    private static List<String> list_group;
    private Discussion currentDiscuss;
    private String pass;
    private JList jList;

    /**
     * Creates new form GestionMessages
     */
    public GestionMessages(Utilisateur u, PrintWriter writer, List<Discussion> l, Socket sock, List<String> groupes) {
        //Interface
        this.setTitle("Messagerie");
        this.setSize(400, 500);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setVisible(true);
        initComponents();
        //déclarations
        this.socket = sock;
        this.user = u;
        this.out = writer;
        this.list = l;
        this.list_group = groupes;
        this.pass = null;

        //Mise à jour liste discussions
        /*List<Discussion> ld=new ArrayList<Discussion>();
        for(Discussion disc : list){
            ld.add(disc);
        }*/
        DefaultListModel listModelD = new DefaultListModel();
        for (Discussion d : this.list) {
            listModelD.addElement(d.getAutorId() + " : " + d.getTitre());
        }
        this.jList = new JList(listModelD);
        this.jList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        JScrollPane jScrollPane5 = new JScrollPane(jList);
        jScrollPane5.setForeground(Color.DARK_GRAY);
        jScrollPane5.setBounds(10, 70, 500, 300);
        jPanel2.add(jScrollPane5);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton3.setText("Sélectionner");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Refresh");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(38, 38, 38))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(199, Short.MAX_VALUE))
        );

        jButton1.setText("Créer une nouvelle discussion");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Déconnexion");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Liste des messages :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 210, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addContainerGap(284, Short.MAX_VALUE))
        );

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        NewDiscussion newD = new NewDiscussion(user, out, socket, list_group);
        /*
        Thread tSynchro = new Thread(new Synchronisation(socket, list, login, user, list_group));
        tSynchro.start();
        */
        /*
        System.out.println("Synchro");
        this.synchronisation(socket);
        System.out.println("Synchro fin");
        */
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        JOptionPane.showMessageDialog(null, "Dommage, vous partez déjà ... On se revoit très vite ! :)", "Exit connexion", JOptionPane.CLOSED_OPTION);
        try {
            socket.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Déconnexion impossible", "Disconnect Error", JOptionPane.ERROR_MESSAGE);
        }
        ClientConnexion accueil = new ClientConnexion();
        this.dispose();
        accueil.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //Rafraichir la page
        /*Thread tSynchro = new Thread(new Synchronisation(socket, list, login, user, list_group));
        tSynchro.start();
        */
        this.synchronisation(socket);
        this.jPanel2.revalidate();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int o = jList.getSelectedIndex();
        int i = 0;
        for(Discussion d : list){
            if(o==i)
                this.currentDiscuss = d;
            i++;
        }
        OpenDiscussion ouvrirDiscussion = new OpenDiscussion(currentDiscuss, user, socket);
    }//GEN-LAST:event_jButton3ActionPerformed

    
    public void synchronisation(Socket socket){
        ServeurMessage mess_emis;
        ServeurMessage mess_recu;
        Discussion current_disc;
        Message current_mess;
        boolean reset;
        String val;
        try {
            //On initialise nos entree sortie.
            this.out = new PrintWriter(socket.getOutputStream());
            this.in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            
            //System.out.println("Creation message...");
            //On envoi une requete de synchronisation
            mess_emis = new ServeurMessage(1, "");
            out.println(mess_emis.encodeMessage());
            out.flush();
            //System.out.println("Message envoyer");
            mess_recu = new ServeurMessage(in.readLine());
            
            //System.out.println("Reception user");
            //reception de l'utilisateur
            if (mess_recu.typeOfMessage() == 2) {
                this.user = mess_recu.convertToUtilisateur();
                mess_recu = new ServeurMessage(in.readLine());
                //on recois tout les groupes contenu dans la bdd
                while (mess_recu.typeOfMessage() == 5) {
                    this.list_group.add(mess_recu.convertToGroupe());
                    mess_recu = new ServeurMessage(in.readLine());
                }
                //On re�ois et stocke tous nos message sous la bonne forme tant que on a pas recu requete de fin
                while (mess_recu.typeOfMessage() != 4) {
                    //reception d'une discussion
                    reset = false;
                    if (mess_recu.typeOfMessage() == 3) {
                        current_disc = mess_recu.convertToDiscussion();
                        this.list.add(current_disc);
                        mess_recu = new ServeurMessage(in.readLine());
                        while (mess_recu.typeOfMessage() == 0) {
                            current_mess = mess_recu.convertToMessage();
                            current_disc.ajouterMessage(current_mess);
                            mess_recu = new ServeurMessage(in.readLine());
                            reset = true;
                        }
                        this.list.add(current_disc);
                    }
                    if (!reset)
                        mess_recu = new ServeurMessage(in.readLine());
                }
            } else {
                System.err.println("Utilisateur non recu");
            }
        } catch (IOException e) {
            System.err.println("Le serveur ne répond plus");
        }
        
        
        System.out.println("[GM] Liste des disc");
        for (Discussion d : list)
            System.out.println(d.getId() + " : " + d.getTitre());
        System.out.println("[GM] fin");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                GestionMessages g = new GestionMessages(user, out, list, socket, list_group);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

}
