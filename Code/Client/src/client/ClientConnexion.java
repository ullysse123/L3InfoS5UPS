/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import client.client.ServeurMessage;
import client.corp.Utilisateur;
import client.corp.Discussion;
import client.corp.Message;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class ClientConnexion extends javax.swing.JFrame {

    static Thread synchronisation;
    static Thread Temission;
    public static String adresseServeur = "127.0.0.1";
    public static int portServeur = 2009;
    private List<Discussion> list_disc = new ArrayList<>();
    private List<String> list_groupes = new ArrayList<>();
    private Utilisateur user;
    boolean connecte = false;
    String login, mdp;

    /**
     * Creates new form client_connexion
     */
    public ClientConnexion() {
        //Interface
        this.setTitle("Accueil Connexion");
        this.setSize(400, 500);
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Se connecter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("CONNEXION :");

        jLabel2.setText("Login :");

        jLabel3.setText("Mot de passe :");

        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1)
                    .addComponent(jPasswordField1))
                .addGap(73, 73, 73))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(118, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(54, 54, 54))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(87, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (!connecte) {

            login = jTextField1.getText();
            mdp = jPasswordField1.getText();

            if (login.length() == 0) {
                JOptionPane.showMessageDialog(null, "Vous n'avez pas remplit le LOGIN.", "oubli remplit LOGIN", JOptionPane.INFORMATION_MESSAGE);
            } else if (mdp.length() == 0) {
                JOptionPane.showMessageDialog(null, "Vous n'avez pas remplit le champ MOT DE PASSE.", "oubli remplit selected", JOptionPane.INFORMATION_MESSAGE);
            } else {
                try {
                    Socket sock = new Socket(adresseServeur, portServeur);
                    InputStreamReader streamreader = new InputStreamReader(sock.getInputStream());
                    BufferedReader in = new BufferedReader(streamreader);
                    PrintWriter out = new PrintWriter(sock.getOutputStream());
                    out.println(login);
                    out.flush();
                    out.println(mdp);
                    out.flush();
                    if (in.readLine().equals("connecte")) {
                        connecte = true;
                        JOptionPane.showMessageDialog(null, "Bonjour " + login + " !\nConnexion en cours...", "Connecte", JOptionPane.INFORMATION_MESSAGE);
                        /*
                        synchronisation = new Thread(new Synchronisation(sock, list_disc, login, user, list_groupes));
                        synchronisation.join();
                        */
                        this.synchronisation(sock);
                        GestionMessages gestionM = new GestionMessages(user, out, list_disc, sock, list_groupes);
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(null, "Connexion impossible : identifiant ou mot de passe incorrect", "Login Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(ClientConnexion.class.getName()).log(Level.SEVERE, null, ex);
                    jTextField1.setText(null);
                    jPasswordField1.setText(null);
                    jTextField1.setEditable(true);
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTextField1.setText(null);
        jPasswordField1.setText(null);
    }//GEN-LAST:event_jButton2ActionPerformed

    public void synchronisation(Socket socket){
        ServeurMessage mess_emis;
        ServeurMessage mess_recu;
        Discussion current_disc;
        Message current_mess;
        BufferedReader in;
        PrintWriter out;
        boolean reset;
        try {
            //On initialise nos entree sortie.
            out = new PrintWriter(socket.getOutputStream());
            in = new BufferedReader(new InputStreamReader(socket.getInputStream()));

            //On envoi une requete de synchronisation
            mess_emis = new ServeurMessage(1, "");
            out.println(mess_emis.encodeMessage());
            out.flush();
            mess_recu = new ServeurMessage(in.readLine());
            //reception de l'utilisateur
            if (mess_recu.typeOfMessage() == 2) {
                this.user = mess_recu.convertToUtilisateur();
                mess_recu = new ServeurMessage(in.readLine());
                //on recois tout les groupes contenu dans la bdd
                while (mess_recu.typeOfMessage() == 5) {
                    this.list_groupes.add(mess_recu.convertToGroupe());
                    mess_recu = new ServeurMessage(in.readLine());
                }
                //On re�ois et stocke tous nos message sous la bonne forme tant que on a pas recu requete de fin
                while (mess_recu.typeOfMessage() != 4) {
                    //reception d'une discussion
                    reset = false;
                    if (mess_recu.typeOfMessage() == 3) {
                        current_disc = mess_recu.convertToDiscussion();
                        reset = true;
                        mess_recu = new ServeurMessage(in.readLine());
                        while (mess_recu.typeOfMessage() == 0) {
                            current_mess = mess_recu.convertToMessage();
                            current_disc.ajouterMessage(current_mess);
                            mess_recu = new ServeurMessage(in.readLine());
                        }
                        list_disc.add(current_disc);
                    }
                    if (!reset)
                        mess_recu = new ServeurMessage(in.readLine());
                }
            } else {
                System.err.println("Utilisateur non recu");
            }
        } catch (IOException e) {
            System.err.println("Le serveur ne répond plus");
        }
        System.out.println("[CC] List disc");
        for (Discussion d : list_disc)
            System.out.println(d.getId() + " : " + d.getTitre());
        System.out.println("[CC] fin");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientConnexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientConnexion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
